<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Détection d'Émotion</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: 0;
            padding: 20px;
        }

        video, canvas {
            border: 2px solid #ccc;
            border-radius: 5px;
            max-width: 400px;
        }

        button {
            margin: 20px;
            padding: 10px 20px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        #result {
            margin-top: 20px;
            text-align: center;
        }

        #result img {
            max-width: 300px;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <h1>Détection d'Émotion</h1>
    <video autoplay></video>
    <button id="capture">Capturer et Analyser</button>
    <div id="result">
        <p id="emotion-info"></p>
        <img id="captured-image" src="" alt="">
    </div>
    <script>
        const video = document.querySelector('video');
        const captureButton = document.querySelector('#capture');
        const resultDiv = document.querySelector('#result');
        const emotionInfo = document.querySelector('#emotion-info');
        const capturedImage = document.querySelector('#captured-image');

        // Accéder à la webcam
        navigator.mediaDevices.getUserMedia({ video: true })
            .then(stream => video.srcObject = stream)
            .catch(error => console.error("Erreur d'accès à la caméra :", error));

        captureButton.addEventListener('click', async () => {
            // Capturer l'image
            const canvas = document.createElement('canvas');
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            const context = canvas.getContext('2d');
            context.drawImage(video, 0, 0, canvas.width, canvas.height);

            // Préparer les données pour l'API
            const imageBlob = await new Promise(resolve => canvas.toBlob(resolve, 'image/jpeg'));
            const formData = new FormData();
            formData.append('image', imageBlob, 'emotion.jpg');

            // Envoyer les données à l'API
            fetch('http://localhost:5000/emotion', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.emotion) {
                    emotionInfo.innerHTML = `<strong>Émotion détectée :</strong> ${data.emotion} (${(data.confidence * 100).toFixed(2)}%)`;
                    capturedImage.src = data.image_path;
                } else {
                    emotionInfo.textContent = "Émotion non détectée.";
                }
                resultDiv.style.display = 'block';
            })
            .catch(error => console.error("Erreur :", error));
        });
    </script>
</body>
</html>
